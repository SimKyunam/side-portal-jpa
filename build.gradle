plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.mile'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
def querydslVersion = '4.4.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Retry
    implementation 'org.springframework.retry:spring-retry:1.3.1'
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.7'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // Querydsl
    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: querydslVersion
    implementation group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion
    implementation group: 'com.querydsl', name: 'querydsl-core', version: querydslVersion

    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion
    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion, classifier: 'jpa'
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // Ehcache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.6'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //embedded-redis
//    implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.1'

    // log
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    // hibernate5 데이터타입 (redis에서 캐싱 안되서 추가)
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.13.0'

    //logstash
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.3'
}

test {
    useJUnitPlatform()
}

def querydslDir = "src/main/generated"


querydsl {
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslDir
}
//에디터 설정
sourceSets {
    main.java.srcDir querydslDir
}
//컴파일 클래스 패스에 넣음.
configurations {
    querydsl.extendsFrom compileClasspath
}
//어노테이션 프로세서와 맞물려서 빌드시 생성
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

clean {
    delete file(querydslDir) // 인텔리제이 Annotation processor 생성물 생성위치
}

task cleanGeneatedDir(type: Delete) { // 인텔리제이 annotation processor 가 생성한 Q클래스가 clean 태스크로 삭제되는 게 불편하다면 둘 중에 하나를 선택
    delete file(querydslDir)
}
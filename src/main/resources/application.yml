spring:
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  profiles:
    active: local
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: create  # none / create-drop / create / update / validate
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 20

  redis: #redis cache 사용
    host: localhost
    port: 6379

#  cache: #ehcache 사용
#    jcache:
#      config: classpath:ehcache.xml
#  jackson:
#    property-naming-strategy: SNAKE_CASE

  mail:
    host: smtp.naver.com
    port: 465
    username: ppp9026@naver.com
    password:
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
            trust: smtp.naver.com
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: 7cqtCmKzS89yh7xsd2cM
            client-secret:
            redirect_uri: {baseUrl}/{action}/oauth2/code/{registrationId}
            authorization-grant-type: authorization_code
            scope: name,email,profile_image
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

server:
  servlet:
    encoding:
      charset: UTF-8
      force: true
logging:
  level:
    root: info
    sql: error
    jdbc: off
    jdbc.sqlonly: info
  #    org.springframework.web: DEBUG
  #    org.hibernate.SQL: DEBUG
  #    org.hibernate.type: trace
  file:
    path: ./logs
    level: DEBUG
jwt:
  key: 12345678901234567890123456789012123456789012345678901234567890121234567890123456789012345678901212345678901234567890123456789012

---
# 로컬
spring:
  config:
    activate:
      on-profile: local
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.H2Dialect
  sql:
    init:
      mode: always
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    #    url: jdbc:h2:~/test; #메모리
    url: jdbc:h2:file:./memoryDb;AUTO_SERVER=true #상대경로 파일저장(memoryDb.mv.db)
    driver-class-name: org.h2.Driver
    username: sa
    password:
  cache:
    jcache:
      config: classpath:ehcache.xml
server:
  port: 9090
decorator:
  datasource:
    p6spy:
      enable-logging: true
file:
  upload-dir: D:\attach\SIDE\HCMP\UPLOAD_FILES

#외부 연동
naver:
  url:
    search:
      local: https://openapi.naver.com/v1/search/local.json
      image: https://openapi.naver.com/v1/search/image
  client:
    id: G9P3uJxUcQQFXQRi4QcL
    secret: 3l0JhUci6o
hcmp:
  url: http://localhost:8080

---
# 개발
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:log4jdbc:mariadb://211.43.12.150:13306/hcmp21?verifyServerCertificate=false&useSSL=false
    dirverClassName: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    hikari:
      username: hcmp
      password: hcmp54#@
      maximum-pool-size: 10
      connection-test-query: SELECT 1
  jpa:
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
server:
  port: 9090
decorator:
  datasource:
    p6spy:
      enable-logging: true
file:
  upload-dir: D:\attach\SIDE\HCMP\UPLOAD_FILES

---
# 배포
spring:
  config:
    activate:
      on-profile: release

server:
  port: 9090

decorator:
  datasource:
    p6spy:
      enable-logging: false
      multiline: false
